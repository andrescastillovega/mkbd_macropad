#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | ESC  |  1   |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |  DEL  | 
// | TAB  |  Q   |  W  |  E  |  R  |  T  |   |  Y  |  U  |  I  |  O  |  P  |  BSPC | 
// |SHIFT |  A   |  S  |  D  |  F  |  G  |   |  H  |  J  |  K  |  L  |  ;  |  SHIFT|
// |LCTRL |  Z   |  X  |  C  |  V  |  B  |   |  N  |  M  |  ,  |  .  |  /  | trans |
//                     |WIN  |LWR  |SPC  |   |ENTER| RSE | ALT |
                        bindings = <
   &kp ESC   &kp N1   &kp N2   &kp N3   &kp N4    &kp N5       &kp N6    &kp N7   &kp N8   &kp N9    &kp N0    &kp DEL
   &kp TAB   &kp Q    &kp W    &kp E    &kp R     &kp T        &kp Y     &kp U    &kp I    &kp O     &kp P     &kp BSPC
   &kp LSHFT &kp A    &kp S    &kp D    &kp F     &kp G        &kp H     &kp J    &kp K    &kp L     &kp SEMI  &kp RSHFT
   &kp LCTRL &kp Z    &kp X    &kp C    &kp V     &kp B        &kp N     &kp M    &kp COMMA &kp DOT  &kp FSLH  &trans
                              &kp LGUI &mo 1     &kp SPACE    &kp RET   &mo 2    &kp LALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  F1  | F2  | F3  | F4  | F5  | F6  |   | F7  | F8  | F9  | F10 | F11 | F12 |
// |  !   |  @  |  #  |  $  |  %  |  ^  |   |  &  |  *  |  (  |  )  |  _  |  +  |
// |BTCLR | BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |  {  |  }  |
// |stud |     |     |     |     |     |   |     |     |     |     |PGUP |     |
//                     |     |     |     |   | DEL |     |HOME |
                        bindings = <
   &kp F1     &kp F2       &kp F3       &kp F4       &kp F5       &kp F6         &kp F7   &kp F8   &kp F9   &kp F10   &kp F11   &kp F12
   &kp EXCL   &kp AT       &kp HASH     &kp DLLR     &kp PRCNT    &kp CARET      &kp AMPS &kp ASTRK &kp LPAR &kp RPAR  &kp UNDER &kp PLUS
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP   &kp RIGHT &kp LBRC  &kp RBRC
   &studio_unlock  &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans   &trans    &kp PG_UP &trans
                                       &trans       &trans       &trans         &kp DEL  &trans   &kp HOME
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// | TAB  | ESC | INS | PSCR| SLCK| PAUS|   | NUM | /   | *   | -   | =   | BSPC|
// |      |     |     |     |     |     |   |  7  |  8  |  9  | +   | [   | ]   |
// |      |     |     |     |     |     |   |  4  |  5  |  6  | +   | ;   | '   |
// |      |     |     |     |     |     |   |  1  |  2  |  3  |ENTER| \   | `   |
//                     |     |     |     |   |  0  |     | .   |
                        bindings = <
   &kp TAB   &kp ESC  &kp INS  &kp PSCRN &kp SLCK &kp PAUSE_BREAK   &kp KP_NUM &kp KP_DIVIDE &kp KP_MULTIPLY &kp KP_MINUS &kp EQUAL &kp BSPC
   &trans    &trans   &trans   &trans    &trans   &trans            &kp KP_N7  &kp KP_N8     &kp KP_N9       &kp KP_PLUS  &kp LBKT  &kp RBKT
   &trans    &trans   &trans   &trans    &trans   &trans            &kp KP_N4  &kp KP_N5     &kp KP_N6       &kp KP_PLUS  &kp SEMI  &kp SQT
   &trans    &trans   &trans   &trans    &trans   &trans            &kp KP_N1  &kp KP_N2     &kp KP_N3       &kp KP_ENTER &kp BSLH  &kp GRAVE
                                       &trans    &trans   &trans            &kp KP_N0  &trans        &kp KP_DOT
                        >;
                };
        };
};
